# Server Configuration
server.port=80
server.servlet.context-path=/gw

# Spring Auto-Configuration Exclusions
spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

# Management Endpoints Configuration
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.rabbit.enabled=false
management.health.redis.enabled=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus

# Gateway Authorization
gw-authorization=${GW_AUTHORIZATION_SECRET}

# DataSource Configuration
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}/api_gw
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.hikari.maximum-pool-size=${POSTGRES_POOL_SIZE}

# MongoDB Configuration
spring.data.mongodb.uri=mongodb+srv://${MONGO_HOST}/api_gw?authSource=admin&retryWrites=true&w=majority
spring.data.mongodb.auto-index-creation=false

# Redis Configuration
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# Cache Configuration
cache.custom.enabled=true
cache.custom.redis.enabled=false
rate.limit.distribution.enabled=false

# Async Configuration
main.servlet.virtual.thread=true
async.virtual.thread = true
async.core.pool.size=10
async.max.pool.size=100
async.keep.alive.time=10
async.time.unit=MINUTES

# Configuration Provider
configuration.provider=POSTGRES
configuration.file.path=${MOUNTED_DIRECTORY}
configuration.logger.name=logger
configuration.router.name=router
configuration.oauth2.name=oauth2
configuration.virtual_endpoint.name=virtual_endpoints
configuration.middlewares.name=middlewares
configuration.accessright.name=custom_paths
configuration.policy.name=policies

# Logging Configuration
#logging.level.org.springframework.security=TRACE

# Social OAuth2 Configuration
google.clientId=${GOOGLE_CLIENT_ID}
facebook.app-secret=${FACEBOOK_APP_SECRET}

#User Resource realm
oauth.user.resource.create=http://${OAUTH_USER_RESOURCE_URL}/user-resource-service/api/v1/users/create-or-get
oauth.user.resource.validate=http://${OAUTH_USER_RESOURCE_URL}/user-resource-service/api/v1/users/validate?username=%s&password=%s
